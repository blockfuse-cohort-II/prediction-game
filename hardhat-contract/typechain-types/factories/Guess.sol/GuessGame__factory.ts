/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { GuessGame, GuessGameInterface } from "../../Guess.sol/GuessGame";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "GameFinished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalCorrect",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalPoints",
        type: "uint256",
      },
    ],
    name: "PointsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[10]",
        name: "answers",
        type: "uint256[10]",
      },
    ],
    name: "PredictionsSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[10]",
        name: "correctAnswers",
        type: "uint256[10]",
      },
    ],
    name: "ResultsGenerated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "streakLength",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardPoints",
        type: "uint256",
      },
    ],
    name: "StreakReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "username",
        type: "string",
      },
    ],
    name: "UsernameSet",
    type: "event",
  },
  {
    inputs: [],
    name: "POINTS_PER_CORRECT_ANSWER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "QUESTIONS_PER_GAME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STREAK_LENGTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STREAK_REWARD_POINTS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allPlayers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "correctAnswers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentGameId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finishGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gameResults",
    outputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "string",
        name: "username",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "correctAnswers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPoints",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getGameLeaderboard",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "player",
            type: "address",
          },
          {
            internalType: "string",
            name: "username",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "correctAnswers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPoints",
            type: "uint256",
          },
        ],
        internalType: "struct GuessGame.GameResult[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGlobalLeaderboard",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "playerAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "username",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "totalPoints",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCorrect",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentStreak",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasPlayed",
            type: "bool",
          },
        ],
        internalType: "struct GuessGame.Player[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
    ],
    name: "getPlayerDetails",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "playerAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "username",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "totalPoints",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCorrect",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentStreak",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasPlayed",
            type: "bool",
          },
        ],
        internalType: "struct GuessGame.Player",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "username",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalPoints",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalCorrect",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentStreak",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakedAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "hasPlayed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "resultsGenerated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_username",
        type: "string",
      },
    ],
    name: "setUsername",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[10]",
        name: "answers",
        type: "uint256[10]",
      },
    ],
    name: "submitPredictions",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userPredictions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600180819055506130dd806100666000396000f3fe6080604052600436106101145760003560e01c80639fecb69f116100a0578063ce9b009d11610064578063ce9b009d14610399578063dea3e42d146103d6578063e2eb41ff14610401578063ed59313a14610444578063f6c331791461046d57610114565b80639fecb69f146102d2578063a0c20436146102e9578063b332457514610329578063bed9d86114610345578063c8dd6ce71461035c57610114565b8063536a3ddc116100e7578063536a3ddc146101e957806359d8555314610214578063761f430b1461023f5780637d7adffa1461027c5780638da5cb5b146102a757610114565b80630544ce5e14610119578063108eeb20146101565780631d5ba17a146101815780634735366c146101ac575b600080fd5b34801561012557600080fd5b50610140600480360381019061013b9190611cc2565b6104aa565b60405161014d9190611d30565b60405180910390f35b34801561016257600080fd5b5061016b6104e9565b6040516101789190611d5a565b60405180910390f35b34801561018d57600080fd5b506101966104ee565b6040516101a39190611f9c565b60405180910390f35b3480156101b857600080fd5b506101d360048036038101906101ce9190611cc2565b610743565b6040516101e091906120e3565b60405180910390f35b3480156101f557600080fd5b506101fe6108b1565b60405161020b9190611d5a565b60405180910390f35b34801561022057600080fd5b506102296108b7565b6040516102369190611d5a565b60405180910390f35b34801561024b57600080fd5b5061026660048036038101906102619190612131565b6108bc565b604051610273919061216d565b60405180910390f35b34801561028857600080fd5b506102916108dc565b60405161029e9190611d5a565b60405180910390f35b3480156102b357600080fd5b506102bc6108e1565b6040516102c99190611d30565b60405180910390f35b3480156102de57600080fd5b506102e7610905565b005b3480156102f557600080fd5b50610310600480360381019061030b9190612188565b6109e6565b6040516103209493929190612212565b60405180910390f35b610343600480360381019061033e9190612394565b610adb565b005b34801561035157600080fd5b5061035a610cf8565b005b34801561036857600080fd5b50610383600480360381019061037e9190612131565b610eba565b604051610390919061245e565b60405180910390f35b3480156103a557600080fd5b506103c060048036038101906103bb9190612480565b61103e565b6040516103cd9190611d5a565b60405180910390f35b3480156103e257600080fd5b506103eb611066565b6040516103f89190611d5a565b60405180910390f35b34801561040d57600080fd5b5061042860048036038101906104239190612131565b61106b565b60405161043b97969594939291906124c0565b60405180910390f35b34801561045057600080fd5b5061046b600480360381019061046691906125eb565b611162565b005b34801561047957600080fd5b50610494600480360381019061048f9190612480565b6114a8565b6040516104a19190611d5a565b60405180910390f35b600381815481106104ba57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a81565b6060600060038054905067ffffffffffffffff81111561051157610510612263565b5b60405190808252806020026020018201604052801561054a57816020015b610537611ba3565b81526020019060019003908161052f5790505b50905060005b60038054905081101561073b57600260006003838154811061057557610574612634565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461064b90612692565b80601f016020809104026020016040519081016040528092919081815260200182805461067790612692565b80156106c45780601f10610699576101008083540402835291602001916106c4565b820191906000526020600020905b8154815290600101906020018083116106a757829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff16151515158152505082828151811061072357610722612634565b5b60200260200101819052508080600101915050610550565b508091505090565b606060046000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156108a657838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461080190612692565b80601f016020809104026020016040519081016040528092919081815260200182805461082d90612692565b801561087a5780601f1061084f5761010080835404028352916020019161087a565b820191906000526020600020905b81548152906001019060200180831161085d57829003601f168201915b505050505081526020016002820154815260200160038201548152505081526020019060010190610778565b505050509050919050565b60015481565b600381565b60076020528060005260406000206000915054906101000a900460ff1681565b600a81565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610993576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098a9061270f565b60405180910390fd5b600160008154809291906109a69061275e565b91905055507f6543ec12c6e53f26532beb5289ef5732dcd77c2e9e9921ae42b695905f5e84c06001546040516109dc9190611d5a565b60405180910390a1565b60046020528160005260406000208181548110610a0257600080fd5b9060005260206000209060040201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610a4c90612692565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7890612692565b8015610ac55780601f10610a9a57610100808354040283529160200191610ac5565b820191906000526020600020905b815481529060010190602001808311610aa857829003601f168201915b5050505050908060020154908060030154905084565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160009054906101000a900460ff1615610b6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b62906127f2565b60405180910390fd5b60003411610bae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba59061285e565b60405180910390fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090600a610bfc929190611bf8565b5034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160006101000a81548160ff021916908315150217905550610ca76114d0565b3373ffffffffffffffffffffffffffffffffffffffff167f3f2a601a107ee971ee6fd5ce93acae3740a45764a3a276f092792d2c22f4572582604051610ced919061291a565b60405180910390a250565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610dc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbe90612982565b60405180910390fd5b6000816005015411610e0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e05906129ee565b60405180910390fd5b600081600501549050600082600501819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610e67573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f8108595eb6bad3acefa9da467d90cc2217686d5c5ac85460f8b7849c840645fc82604051610eae9190611d5a565b60405180910390a25050565b610ec2611ba3565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054610f7290612692565b80601f0160208091040260200160405190810160405280929190818152602001828054610f9e90612692565b8015610feb5780601f10610fc057610100808354040283529160200191610feb565b820191906000526020600020905b815481529060010190602001808311610fce57829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff1615151515815250509050919050565b600660205281600052604060002081600a811061105a57600080fd5b01600091509150505481565b603281565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546110b490612692565b80601f01602080910402602001604051908101604052809291908181526020018280546110e090612692565b801561112d5780601f106111025761010080835404028352916020019161112d565b820191906000526020600020905b81548152906001019060200180831161111057829003601f168201915b5050505050908060020154908060030154908060040154908060050154908060060160009054906101000a900460ff16905087565b60008151116111a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119d90612a5a565b60405180910390fd5b60005b6003805490508110156112a057818051906020012060026000600384815481106111d6576111d5612634565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160405161124b9190612b1d565b604051809103902003611293576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128a90612b80565b60405180910390fd5b80806001019150506111a9565b50600073ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361141c5733600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101908161146b9190612d4c565b507f74d8e560d2e870c35b35dc882df2a5c96e2bf1cdb5ef6dd2f9cb433c8d048853338260405161149d929190612e1e565b60405180910390a150565b600560205281600052604060002081600a81106114c457600080fd5b01600091509150505481565b6000339050600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160009054906101000a900460ff16611564576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155b90612e9a565b60405180910390fd5b61156c611c38565b60005b600a8110156115dd576002424485846040516020016115919493929190612f23565b6040516020818303038152906040528051906020012060001c6115b49190612fa0565b8282600a81106115c7576115c6612634565b5b602002018181525050808060010191505061156f565b5080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090600a61162c929190611bf8565b506001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061168e826116e0565b8173ffffffffffffffffffffffffffffffffffffffff167f37dc1c195d763b4a0ca82a356352c01abfdf09ba4c36ef7f0ee1f7e6be58abeb826040516116d4919061291a565b60405180910390a25050565b600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661176c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161176390612982565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600080600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a806020026040519081016040528092919082600a8015611828576020028201915b815481526020019060010190808311611814575b505050505090506000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a806020026040519081016040528092919082600a80156118a7576020028201915b815481526020019060010190808311611893575b5050505050905060005b600a81101561190b578181600a81106118cd576118cc612634565b5b60200201518382600a81106118e5576118e4612634565b5b6020020151036118fe5783806118fa9061275e565b9450505b80806001019150506118b1565b50828460030160008282546119209190612fd1565b92505081905550600a836119349190613005565b8460020160008282546119479190612fd1565b925050819055506000600385600401546119619190612fa0565b14801561196e5750600083115b156119d05760328460020160008282546119889190612fd1565b925050819055507ffbdafbbc14774062bbd11c772b5079b5f04e8abe9cbdbf1a7920a642b748f9f985856004015460326040516119c793929190613047565b60405180910390a15b60046000600154815260200190815260200160002060405180608001604052808773ffffffffffffffffffffffffffffffffffffffff168152602001866001018054611a1b90612692565b80601f0160208091040260200160405190810160405280929190818152602001828054611a4790612692565b8015611a945780601f10611a6957610100808354040283529160200191611a94565b820191906000526020600020905b815481529060010190602001808311611a7757829003601f168201915b505050505081526020018581526020018660020154815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019081611b319190612d4c565b50604082015181600201556060820151816003015550508473ffffffffffffffffffffffffffffffffffffffff167feceb10b266995afd3009502df537b0421b7f635dd268f4b0a74b99a87be65213848660020154604051611b9492919061307e565b60405180910390a25050505050565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600081526020016000815260200160008152602001600081526020016000151581525090565b82600a8101928215611c27579160200282015b82811115611c26578251825591602001919060010190611c0b565b5b509050611c349190611c5b565b5090565b604051806101400160405280600a90602082028036833780820191505090505090565b5b80821115611c74576000816000905550600101611c5c565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b611c9f81611c8c565b8114611caa57600080fd5b50565b600081359050611cbc81611c96565b92915050565b600060208284031215611cd857611cd7611c82565b5b6000611ce684828501611cad565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d1a82611cef565b9050919050565b611d2a81611d0f565b82525050565b6000602082019050611d456000830184611d21565b92915050565b611d5481611c8c565b82525050565b6000602082019050611d6f6000830184611d4b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611daa81611d0f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611dea578082015181840152602081019050611dcf565b60008484015250505050565b6000601f19601f8301169050919050565b6000611e1282611db0565b611e1c8185611dbb565b9350611e2c818560208601611dcc565b611e3581611df6565b840191505092915050565b611e4981611c8c565b82525050565b60008115159050919050565b611e6481611e4f565b82525050565b600060e083016000830151611e826000860182611da1565b5060208301518482036020860152611e9a8282611e07565b9150506040830151611eaf6040860182611e40565b506060830151611ec26060860182611e40565b506080830151611ed56080860182611e40565b5060a0830151611ee860a0860182611e40565b5060c0830151611efb60c0860182611e5b565b508091505092915050565b6000611f128383611e6a565b905092915050565b6000602082019050919050565b6000611f3282611d75565b611f3c8185611d80565b935083602082028501611f4e85611d91565b8060005b85811015611f8a5784840389528151611f6b8582611f06565b9450611f7683611f1a565b925060208a01995050600181019050611f52565b50829750879550505050505092915050565b60006020820190508181036000830152611fb68184611f27565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006080830160008301516120026000860182611da1565b506020830151848203602086015261201a8282611e07565b915050604083015161202f6040860182611e40565b5060608301516120426060860182611e40565b508091505092915050565b60006120598383611fea565b905092915050565b6000602082019050919050565b600061207982611fbe565b6120838185611fc9565b93508360208202850161209585611fda565b8060005b858110156120d157848403895281516120b2858261204d565b94506120bd83612061565b925060208a01995050600181019050612099565b50829750879550505050505092915050565b600060208201905081810360008301526120fd818461206e565b905092915050565b61210e81611d0f565b811461211957600080fd5b50565b60008135905061212b81612105565b92915050565b60006020828403121561214757612146611c82565b5b60006121558482850161211c565b91505092915050565b61216781611e4f565b82525050565b6000602082019050612182600083018461215e565b92915050565b6000806040838503121561219f5761219e611c82565b5b60006121ad85828601611cad565b92505060206121be85828601611cad565b9150509250929050565b600082825260208201905092915050565b60006121e482611db0565b6121ee81856121c8565b93506121fe818560208601611dcc565b61220781611df6565b840191505092915050565b60006080820190506122276000830187611d21565b818103602083015261223981866121d9565b90506122486040830185611d4b565b6122556060830184611d4b565b95945050505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61229b82611df6565b810181811067ffffffffffffffff821117156122ba576122b9612263565b5b80604052505050565b60006122cd611c78565b90506122d98282612292565b919050565b600067ffffffffffffffff8211156122f9576122f8612263565b5b602082029050919050565b600080fd5b600061231c612317846122de565b6122c3565b9050806020840283018581111561233657612335612304565b5b835b8181101561235f578061234b8882611cad565b845260208401935050602081019050612338565b5050509392505050565b600082601f83011261237e5761237d61225e565b5b600a61238b848285612309565b91505092915050565b600061014082840312156123ab576123aa611c82565b5b60006123b984828501612369565b91505092915050565b600060e0830160008301516123da6000860182611da1565b50602083015184820360208601526123f28282611e07565b91505060408301516124076040860182611e40565b50606083015161241a6060860182611e40565b50608083015161242d6080860182611e40565b5060a083015161244060a0860182611e40565b5060c083015161245360c0860182611e5b565b508091505092915050565b6000602082019050818103600083015261247881846123c2565b905092915050565b6000806040838503121561249757612496611c82565b5b60006124a58582860161211c565b92505060206124b685828601611cad565b9150509250929050565b600060e0820190506124d5600083018a611d21565b81810360208301526124e781896121d9565b90506124f66040830188611d4b565b6125036060830187611d4b565b6125106080830186611d4b565b61251d60a0830185611d4b565b61252a60c083018461215e565b98975050505050505050565b600080fd5b600067ffffffffffffffff82111561255657612555612263565b5b61255f82611df6565b9050602081019050919050565b82818337600083830152505050565b600061258e6125898461253b565b6122c3565b9050828152602081018484840111156125aa576125a9612536565b5b6125b584828561256c565b509392505050565b600082601f8301126125d2576125d161225e565b5b81356125e284826020860161257b565b91505092915050565b60006020828403121561260157612600611c82565b5b600082013567ffffffffffffffff81111561261f5761261e611c87565b5b61262b848285016125bd565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806126aa57607f821691505b6020821081036126bd576126bc612663565b5b50919050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869730000000000000000600082015250565b60006126f96018836121c8565b9150612704826126c3565b602082019050919050565b60006020820190508181036000830152612728816126ec565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061276982611c8c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361279b5761279a61272f565b5b600182019050919050565b7f416c726561647920706c61796564000000000000000000000000000000000000600082015250565b60006127dc600e836121c8565b91506127e7826127a6565b602082019050919050565b6000602082019050818103600083015261280b816127cf565b9050919050565b7f4d757374207374616b6520736f6d652045544800000000000000000000000000600082015250565b60006128486013836121c8565b915061285382612812565b602082019050919050565b600060208201905081810360008301526128778161283b565b9050919050565b6000600a9050919050565b600081905092915050565b6000819050919050565b60006128aa8383611e40565b60208301905092915050565b6000602082019050919050565b6128cc8161287e565b6128d68184612889565b92506128e182612894565b8060005b838110156129125781516128f9878261289e565b9650612904836128b6565b9250506001810190506128e5565b505050505050565b60006101408201905061293060008301846128c3565b92915050565b7f526573756c7473206e6f742067656e6572617465640000000000000000000000600082015250565b600061296c6015836121c8565b915061297782612936565b602082019050919050565b6000602082019050818103600083015261299b8161295f565b9050919050565b7f4e6f207374616b6520746f207769746864726177000000000000000000000000600082015250565b60006129d86014836121c8565b91506129e3826129a2565b602082019050919050565b60006020820190508181036000830152612a07816129cb565b9050919050565b7f557365726e616d652063616e6e6f7420626520656d7074790000000000000000600082015250565b6000612a446018836121c8565b9150612a4f82612a0e565b602082019050919050565b60006020820190508181036000830152612a7381612a37565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154612aa781612692565b612ab18186612a7a565b94506001821660008114612acc5760018114612ae157612b14565b60ff1983168652811515820286019350612b14565b612aea85612a85565b60005b83811015612b0c57815481890152600182019150602081019050612aed565b838801955050505b50505092915050565b6000612b298284612a9a565b915081905092915050565b7f557365726e616d6520616c72656164792074616b656e00000000000000000000600082015250565b6000612b6a6016836121c8565b9150612b7582612b34565b602082019050919050565b60006020820190508181036000830152612b9981612b5d565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612c027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612bc5565b612c0c8683612bc5565b95508019841693508086168417925050509392505050565b6000819050919050565b6000612c49612c44612c3f84611c8c565b612c24565b611c8c565b9050919050565b6000819050919050565b612c6383612c2e565b612c77612c6f82612c50565b848454612bd2565b825550505050565b600090565b612c8c612c7f565b612c97818484612c5a565b505050565b5b81811015612cbb57612cb0600082612c84565b600181019050612c9d565b5050565b601f821115612d0057612cd181612ba0565b612cda84612bb5565b81016020851015612ce9578190505b612cfd612cf585612bb5565b830182612c9c565b50505b505050565b600082821c905092915050565b6000612d2360001984600802612d05565b1980831691505092915050565b6000612d3c8383612d12565b9150826002028217905092915050565b612d5582611db0565b67ffffffffffffffff811115612d6e57612d6d612263565b5b612d788254612692565b612d83828285612cbf565b600060209050601f831160018114612db65760008415612da4578287015190505b612dae8582612d30565b865550612e16565b601f198416612dc486612ba0565b60005b82811015612dec57848901518255600182019150602085019450602081019050612dc7565b86831015612e095784890151612e05601f891682612d12565b8355505b6001600288020188555050505b505050505050565b6000604082019050612e336000830185611d21565b8181036020830152612e4581846121d9565b90509392505050565b7f506c6179657220686173206e6f7420706c617965640000000000000000000000600082015250565b6000612e846015836121c8565b9150612e8f82612e4e565b602082019050919050565b60006020820190508181036000830152612eb381612e77565b9050919050565b6000819050919050565b612ed5612ed082611c8c565b612eba565b82525050565b60008160601b9050919050565b6000612ef382612edb565b9050919050565b6000612f0582612ee8565b9050919050565b612f1d612f1882611d0f565b612efa565b82525050565b6000612f2f8287612ec4565b602082019150612f3f8286612ec4565b602082019150612f4f8285612f0c565b601482019150612f5f8284612ec4565b60208201915081905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612fab82611c8c565b9150612fb683611c8c565b925082612fc657612fc5612f71565b5b828206905092915050565b6000612fdc82611c8c565b9150612fe783611c8c565b9250828201905080821115612fff57612ffe61272f565b5b92915050565b600061301082611c8c565b915061301b83611c8c565b925082820261302981611c8c565b915082820484148315176130405761303f61272f565b5b5092915050565b600060608201905061305c6000830186611d21565b6130696020830185611d4b565b6130766040830184611d4b565b949350505050565b60006040820190506130936000830185611d4b565b6130a06020830184611d4b565b939250505056fea26469706673582212206377b46a4317b7d8647ac2ce814019a523d210d97c9ae2b4a093a418b1a5a43e64736f6c634300081c0033";

type GuessGameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GuessGameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GuessGame__factory extends ContractFactory {
  constructor(...args: GuessGameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      GuessGame & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GuessGame__factory {
    return super.connect(runner) as GuessGame__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GuessGameInterface {
    return new Interface(_abi) as GuessGameInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): GuessGame {
    return new Contract(address, _abi, runner) as unknown as GuessGame;
  }
}
